package restaurant_management;


import java.awt.Color;
import java.awt.Container;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Set;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JButton;
import static javax.swing.JFrame.EXIT_ON_CLOSE;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import net.proteanit.sql.DbUtils;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author ank
 */
public class Test extends javax.swing.JFrame implements ActionListener{
Container a;
    JLabel r,lborderno,lbcustname,lbcontact,rst;
    JTextField tforderno,tfcustname,tfcontact,tf1,tf2,tf3,tf4,tf5,tf6,tf7,tf8,tftotal;
    JButton total,cancel,savebutton;
    Connection con;
    PreparedStatement ps,pis;
    String[] itemP;
    private String[] itemN;
    private int sum1;
    private int sum2;
    private int sum3;
    private int sum4;
    public Test() {
        initComponents();
         try {
             
               Class.forName("com.mysql.jdbc.Driver");
          con = DriverManager.getConnection("jdbc:mysql://localhost:3306/restaurant", "root", "root");
        ps=con.prepareStatement("select Item_Name, Item_Price from item");       
    ResultSet r=ps.executeQuery();
    jTable1.setModel(DbUtils.resultSetToTableModel(r));
        } catch (Exception ex) {
             JOptionPane.showMessageDialog(this, ex);
        }
         a=getContentPane();
		setSize(900,600);
		setTitle("Hotel");
		a.setBackground(Color.white);                
		a.setLayout(null);
                setDefaultCloseOperation(EXIT_ON_CLOSE);
                
    r = new JLabel("Order");
    r.setBounds(425, 10, 100, 30);
    
    lborderno = new JLabel("Order No. :");
    lborderno.setBounds(35, 80, 60, 30);
    
    
    tforderno = new JTextField();
    tforderno.setBounds(150, 80, 60, 30);
    
    lbcustname = new JLabel("Customer Name :");
    lbcustname.setBounds(35, 140, 110, 30);
    
    tfcustname = new JTextField();
    tfcustname.setBounds(150, 140, 120, 30);
    
    lbcontact = new JLabel("Contact No. :");
    lbcontact.setBounds(35, 200, 110, 30);
    
    tfcontact = new JTextField();
    tfcontact.setBounds(150, 200, 120, 30);
    
    tf1 = new JTextField();
    tf1.setBounds(110, 280, 150, 30);
    
    tf2 = new JTextField();
    tf2.setBounds(110, 330, 150, 30);
    
    tf3 = new JTextField();
    tf3.setBounds(110, 380, 150, 30);
    
    tf4 = new JTextField();
    tf4.setBounds(110, 430, 150, 30);
    
    tf5 = new JTextField();
    tf5.setBounds(280, 430, 30, 30);
    
    tf7 = new JTextField();
    tf7.setBounds(280, 330, 30, 30);
    
    tf6 = new JTextField();
    tf6.setBounds(280, 380, 30, 30);
    
    tf8 = new JTextField();
    tf8.setBounds(280, 280, 30, 30);
    
    total = new JButton("Total");
    total.setBounds(80, 500, 80, 30);
    
    cancel = new JButton("Back");
    cancel.setBounds(300, 500, 80, 30);
    
    savebutton = new JButton("Save");
    savebutton.setBounds(450, 500, 80, 30);
    
    rst = new JLabel("Rs.");
    rst.setBounds(180, 500, 20, 30);
    
    tftotal = new JTextField();
    tftotal.setBounds(200, 500, 60, 30);
    tftotal.setEditable(false);
    
   
    a.add(r);
    a.add(lborderno);
    a.add(tforderno);
    a.add(lbcustname);
    a.add(tfcustname);
    a.add(lbcontact);
    a.add(tfcontact);
    a.add(tf1);
    a.add(tf2);
    a.add(tf3);
    a.add(tf4);
    a.add(tf5);
    a.add(tf6);
    a.add(tf7);
    a.add(tf8);
    a.add(total);
    a.add(rst);
    a.add(tftotal);
    a.add(cancel);
    a.add(savebutton);
    
    total.addActionListener(this);
    cancel.addActionListener(this);
    savebutton.addActionListener(this);
    setVisible(true);
    
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        itemName = new javax.swing.JLabel();
        quantity = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Menu");

        itemName.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        itemName.setText("Item Name");

        quantity.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        quantity.setText("Quantity");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(584, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(326, 326, 326))
            .addGroup(layout.createSequentialGroup()
                .addGap(149, 149, 149)
                .addComponent(itemName)
                .addGap(40, 40, 40)
                .addComponent(quantity)
                .addGap(88, 88, 88)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(64, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 348, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(170, 170, 170)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(itemName)
                            .addComponent(quantity))))
                .addGap(67, 67, 67))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel itemName;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel quantity;
    // End of variables declaration//GEN-END:variables
Map m=new HashMap();
Map mi=new HashMap();
    public void actionPerformed(ActionEvent e) {
  
        if(e.getSource()==cancel){
           new Hotel_1();
           setVisible(false);
        }
         String c = tforderno.getText();
         String k2= tfcustname.getText();
                String b = tfcontact.getText();
                String k4= tf1.getText();                
                String k5= tf2.getText();               
                String k6= tf3.getText();
                String k7= tf4.getText();
                String k8= tf5.getText();
                String k9= tf6.getText();               
                String k10= tf7.getText();
                String k11= tf8.getText();
                String i = tftotal.getText();
         if(e.getSource()==savebutton){
            
             int k1= Integer.parseInt(c);
                
                Long k3= Long.parseLong(b);
                
                int k12= Integer.parseInt(i);
                System.out.println(k3);
                
            try {
//                     Class.forName("com.mysql.jdbc.Driver");
//          con = DriverManager.getConnection("jdbc:mysql://localhost:3306/restaurant", "root", "root");
                pis=con.prepareStatement("insert into order1 values(?,?,?,?,?,?,?,?,?,?,?,?)");
               if(c.length() > 0)
               { pis.setInt(1, k1);}
               else {pis.setInt(1,0);}
               if(k2.length() > 0){ pis.setString(2, k2);}
               else {pis.setString(2, null);}
               if(b.length() > 0){ pis.setString(3, b);}
               else { pis.setString(3, null);}
               if(k4.length()>0){ pis.setString(4, k4);}
               else {pis.setString(4, null);}
               if(k11.length()>0) {pis.setString(5, k11);}
               else { pis.setString(5, null);}
               if(k5.length()>0){ pis.setString(6, k5);}   
               else {pis.setString(6,null);}
               if(k10.length()>0) {pis.setString(7, k10);}
               else {pis.setString(7,null);}
               if(k6.length()>0) {pis.setString(8, k6);}
               else {pis.setString(8, null);}
               if(k9.length()>0){ pis.setString(9, k9);}
               else {pis.setString(9,null);}
               if(k7.length()>0) {pis.setString(10, k7);}
               else {pis.setString(10, null);}
               if(k8.length()>0) {pis.setString(11, k8);}
               else {pis.setString(11,null);}
               if(i.length() >0) {pis.setInt(12, k12);}
               else { pis.setInt(12,0);}
                
                pis.execute();
                
                JOptionPane.showMessageDialog(this, "Data Saved Successfully");
                tforderno.setText("");
                tfcustname.setText("");
                tfcontact.setText("");
                tf1.setText("");
                tf2.setText("");
                tf3.setText("");
                tf4.setText("");
                tf5.setText("");
                tf6.setText("");
                tf7.setText("");
                tf8.setText("");
                tftotal.setText("");
            } catch (SQLException ex) {
                 JOptionPane.showMessageDialog(this,ex);
            } 
        }  
          
         if(e.getSource()==total){
         
         String tfs1=tf1.getText();
         String tfs2=tf2.getText();
         String tfs3=tf3.getText();
         String tfs4=tf4.getText();
         
         
           try {
             Statement ps = con.createStatement();
              ResultSet rs=ps.executeQuery("select Item_Name,Item_Price from item");
               while (rs.next()) {
            m.put(rs.getString("Item_Name"), rs.getString("Item_Price"));
               }
               Set set=m.keySet();
                 List lt=Arrays.asList(set);
       String st=lt.toString();
       String str=st.substring(2, st.length()-2);
        itemN=str.split(", "); 
        int sum=0,sum1=0,sum2=0, sum3=0, sum4=0;
               for (String obj : itemN) {
                   
                   if (tfs1.equals(obj)) {
                       int q1=Integer.parseInt(tf8.getText());
                       String u1=(String) m.get(tfs1);
                       int r1=Integer.parseInt(u1);
                       sum1 = (r1*q1);
                       System.out.println("" + sum1);
                   }
                   if (tfs2.equals(obj)) {
                       int q2=Integer.parseInt(tf7.getText());
                       String u2=(String) m.get(tfs2);
                       int r2=Integer.parseInt(u2);
                        sum2 = (r2*q2);
                   }
                   if (tfs3.equals(obj)) {
                       int q3=Integer.parseInt(tf6.getText());
                       String u3=(String) m.get(tfs3); 
                       int r3=Integer.parseInt(u3);
                       sum3 = (r3*q3);
                   }
                   if (tfs4.equals(obj)) {
                       int q4=Integer.parseInt(tf5.getText());
                       String u4=(String) m.get(tfs4);
                       int r4=Integer.parseInt(u4);
                       sum4 = (r4*q4);
                   }
               
               
              sum= sum1+sum2+sum3+sum4;
               }
               String s1=String.valueOf(sum);
               tftotal.setText(s1); 
        } catch (Exception et) {
            et.printStackTrace();
        }
           
        }
         
    }
}
    
